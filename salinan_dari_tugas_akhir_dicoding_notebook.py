# -*- coding: utf-8 -*-
"""Salinan dari Tugas_Akhir_Dicoding_notebook.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NfRMoK5Bt2VoQKwkcbC468DxHX4icBla

# Proyek Analisis Data: Bike-Sharing-Dataset
- Nama: I Gede Made Pradnya Airlangga
- Email: pradnya.airlangga@gmail.com
- Id Dicoding: I Gede Made Pradnya Airlangga

## Menentukan Pertanyaan Bisnis

- Apa faktor-faktor yang paling berpengaruh terhadap tingkat penggunaan sepeda (bicycles) dalam sistem bike sharing kami?
- Bagaimana kondisi cuaca seperti suhu, hujan, dan kecepatan angin mempengaruhi jumlah peminjaman sepeda? Adakah perbedaan dalam pola peminjaman antara pengguna terdaftar dan pengguna kasual?

## Menghubungkan ke dataset yang ada di google drive
"""

from google.colab import drive
drive.mount('/content/gdrive')

import os
os.environ['KAGGLE_CONFIG_DIR'] = "/content/gdrive/My Drive/Kaggle"
# /content/gdrive/My Drive/Kaggle is the path where kaggle.json is present in the Google Drive

# Commented out IPython magic to ensure Python compatibility.
#changing the working directory
# %cd /content/gdrive/My Drive/Kaggle
#Check the present working directory using pwd command

!ls

"""## Menyaipkan semua library yang dibuthkan"""

import pandas as pd
import statsmodels.api as sm
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import scipy
from sklearn.model_selection import train_test_split

"""## Data Wrangling

### Gathering Data

memuat tabel day
"""

day_df = pd.read_csv(r'day.csv')

"""memunculkan tabel day"""

day_df.head()

"""memuat tabel hour"""

hour_df = pd.read_csv(r'hour.csv')

"""memunculkan tabel hour"""

hour_df.head()

"""### Assessing Data

menilai data day_df
"""

day_df.info()

"""memastikan jumlah missing values yang terdapat di setiap kolom dalam tabl day"""

day_df.isna().sum()

"""memeriksa duplikasi data dalam tabel day"""

print("Jumlah duplikasi: ", day_df.duplicated().sum())

"""memeriksa parameter statistik dari kolom numerik yang terdapat dalam day_df"""

day_df.describe()

"""menilai data pada hour_df"""

hour_df.info()

"""memeriksa duplikasi dan ringkasan parameter statistik dari kolom numerik pada hour_df"""

print("Jumlah duplikasi: ",hour_df.duplicated().sum())
hour_df.describe()

"""### Cleaning Data

tidak perlu melakukan cleaning data, dikarenakan data yang ada tidak terdapat missing value ataupun duplikat data

## Exploratory Data Analysis (EDA)

Eksplorasi tren harian dan musiman penggunaan sepeda
"""

# Mengonversi kolom 'dteday' ke dalam format datetime
day_df['dteday'] = pd.to_datetime(day_df['dteday'])

# Membagi data berdasarkan tahun
day_df['year'] = day_df['dteday'].dt.year

# Menghitung jumlah peminjaman sepeda harian
daily_count = day_df.groupby('dteday')['cnt'].sum()

# Menghitung rata-rata jumlah peminjaman sepeda per bulan
monthly_average = day_df.resample('M', on='dteday')['cnt'].mean()

# Menghitung rata-rata jumlah peminjaman sepeda per musim
seasonal_average = day_df.groupby('season')['cnt'].mean()

# Menampilkan grafik tren harian penggunaan sepeda
plt.figure(figsize=(12, 6))
sns.lineplot(x=daily_count.index, y=daily_count.values)
plt.title("Tren Harian Penggunaan Sepeda")
plt.xlabel("Tanggal")
plt.ylabel("Jumlah Peminjaman Sepeda")
plt.xticks(rotation=45)
plt.show()

# Menampilkan grafik rata-rata bulanan penggunaan sepeda
plt.figure(figsize=(8, 4))
sns.barplot(x=monthly_average.index, y=monthly_average.values)
plt.title("Rata-rata Bulanan Penggunaan Sepeda")
plt.xlabel("Bulan")
plt.ylabel("Rata-rata Peminjaman Sepeda")
plt.xticks(rotation=45)
plt.show()

# Menampilkan grafik rata-rata musiman penggunaan sepeda
plt.figure(figsize=(6, 3))
sns.barplot(x=seasonal_average.index, y=seasonal_average.values)
plt.title("Rata-rata Musiman Penggunaan Sepeda")
plt.xlabel("Musim")
plt.ylabel("Rata-rata Peminjaman Sepeda")
plt.show()

"""Membandingkan tren peminjaman sepeda antara peminjam casual dan yang teregistrasi"""

# Mengonversi kolom 'dteday' ke dalam format datetime
day_df['dteday'] = pd.to_datetime(day_df['dteday'])

# Menghitung jumlah peminjaman sepeda oleh peminjam teregistrasi
registered_counts = day_df['registered']

# Menghitung jumlah peminjaman sepeda oleh peminjam casual
casual_counts = day_df['casual']

# Membuat plot untuk perbandingan jumlah peminjaman sepeda oleh peminjam teregistrasi dan casual
plt.figure(figsize=(10, 6))
plt.plot(day_df['dteday'], registered_counts, label='Teregistrasi', color='blue')
plt.plot(day_df['dteday'], casual_counts, label='Casual', color='red')
plt.title("Perbandingan Jumlah Peminjaman Sepeda oleh Peminjam Teregistrasi dan Casual")
plt.xlabel("Tanggal")
plt.ylabel("Jumlah Peminjaman Sepeda")
plt.legend()
plt.show()

"""pengaruh cuaca dalam penggunaan cuaca"""

# Menghitung jumlah peminjaman sepeda untuk kondisi cuaca yang berbeda
weather_counts = day_df.groupby('weathersit')['cnt'].sum()

# Mengonversi kode cuaca menjadi label yang lebih deskriptif
weather_labels = {
    1: "Cerah",
    2: "Berawan",
    3: "Hujan Ringan",
    4: "Hujan Berat"
}
weather_counts.index = weather_counts.index.map(weather_labels)

# Membuat bar plot untuk membandingkan penggunaan sepeda berdasarkan kondisi cuaca
plt.figure(figsize=(10, 6))
weather_counts.plot(kind='bar', color='skyblue')
plt.title("Penggunaan Sepeda berdasarkan Kondisi Cuaca")
plt.xlabel("Kondisi Cuaca")
plt.ylabel("Jumlah Peminjaman Sepeda")
plt.xticks(rotation=0)
plt.show()

"""mengeksplorasi hari dalam seminggu memengaruhi pola peminjaman. Apakah lebih banyak orang meminjam sepeda di akhir pekan?"""

# Mengubah kolom "dteday" menjadi tipe data datetime
hour_df['dteday'] = pd.to_datetime(hour_df['dteday'])

# Menambahkan kolom "day_of_week" yang berisi hari dalam seminggu (0: Minggu, 1: Senin, dst.)
hour_df['day_of_week'] = hour_df['dteday'].dt.dayofweek

# Menghitung jumlah peminjaman sepeda berdasarkan hari dalam seminggu
daily_rentals = hour_df.groupby('day_of_week')['cnt'].sum()

# Visualisasi peminjaman sepeda berdasarkan hari dalam seminggu
plt.subplot(2, 1, 1)
days = ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu']
plt.plot(days, daily_rentals.values)
plt.title("Peminjaman Sepeda berdasarkan Hari dalam Seminggu")
plt.xlabel("Hari dalam Seminggu")
plt.ylabel("Jumlah Peminjaman")

plt.tight_layout()
plt.show()

"""### Pertanyaan 1: Apa faktor-faktor yang paling berpengaruh terhadap tingkat penggunaan sepeda (bicycles) dalam sistem bike sharing kami?

**menghitung korelasi antara variabel-variabel dengan 'cnt'**
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Memuat dataset "day"
data_day = pd.read_csv('combined_dataset.csv')

# Hitung korelasi antara variabel-variabel dengan 'cnt'
correlation = data_day.corr()['cnt'].drop('cnt')

# Urutkan korelasi dari yang paling berpengaruh
sorted_correlation = correlation.abs().sort_values(ascending=False)

# Tampilkan hasil korelasi
print(sorted_correlation)

"""Output diatas adalah korelasi antara berbagai variabel dengan variabel target 'cnt' dalam dataset. Hal tersebut dapat dijelaskan sebagai berikut:

- Jika nilai korelasi mendekati 1, itu menunjukkan hubungan positif yang kuat dengan 'cnt'. Artinya, ketika variabel tersebut meningkat, 'cnt' juga cenderung meningkat.
- Jika nilai korelasi mendekati -1, itu menunjukkan hubungan negatif yang kuat dengan 'cnt'. Artinya, ketika variabel tersebut meningkat, 'cnt' cenderung menurun.
- Jika nilai korelasi mendekati 0, itu menunjukkan bahwa tidak ada hubungan linear yang kuat antara variabel tersebut dan 'cnt'.

Berdasarkan output tersebut, ini adalah interpretasi korelasi antara variabel dan 'cnt' (jumlah peminjaman sepeda):

- `registered`: Korelasi positif sangat kuat (0.990). Ini menunjukkan bahwa jumlah peminjaman oleh pengguna terdaftar sangat berhubungan positif dengan 'cnt'. Artinya, ketika jumlah peminjaman oleh pengguna terdaftar meningkat, 'cnt' juga cenderung meningkat.

- `casual`: Korelasi positif kuat (0.864). Ini menunjukkan bahwa jumlah peminjaman oleh pengguna casual juga berhubungan positif dengan 'cnt'. Artinya, ketika jumlah peminjaman oleh pengguna casual meningkat, 'cnt' cenderung meningkat.

- `hr`: Korelasi positif yang lebih rendah (0.394). Ini menunjukkan bahwa jam dalam sehari memiliki pengaruh positif yang lebih lemah pada 'cnt'. Artinya, jam tertentu dalam sehari dapat memengaruhi 'cnt', tetapi pengaruhnya lebih rendah dibandingkan dengan 'registered' dan 'casual'.

- `instant`: Korelasi positif yang lebih rendah (0.231). Ini menunjukkan bahwa variabel 'instant' (mungkin berhubungan dengan waktu) memiliki pengaruh positif yang lebih rendah pada 'cnt'.

- `temp`: Korelasi positif yang lebih rendah (0.122). Ini menunjukkan bahwa suhu memiliki pengaruh positif yang lebih rendah pada 'cnt'.

Dalam konteks analisis korelasi, faktor-faktor ini adalah yang paling berpengaruh pada tingkat penggunaan sepeda ('cnt') dalam sistem bike sharing.

**Pengujicobaan faktor 'registered', 'casual', 'hr', 'instant', 'temp' terhadap tingkat penggunaan sepeda (bicycles) dalam sistem bike sharing kita dalam dataset per day dengan menggunakan model regresi**
"""

# Importing necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load the dataset
data_day = pd.read_csv("combined_dataset.csv")

# Selecting the features and target
features = ['registered', 'casual','instant', 'temp']
X = data_day[features]
y = data_day['cnt']

# Splitting the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Training the regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predicting the target for the test set
y_pred = model.predict(X_test)

# Calculating the mean squared error
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

# Printing the coefficients for each feature
coefficients = pd.DataFrame(model.coef_, features, columns=['Coefficient'])
print(coefficients)

"""## Conclusion

- Mean Squared Error (MSE) adalah sebuah metrik yang digunakan untuk mengukur seberapa baik model regresi berkinerja dalam memprediksi target (dalam hal ini, jumlah sepeda yang dipinjam) berdasarkan fitur-fitur yang digunakan dalam model. Semakin rendah nilai MSE, semakin baik modelnya dalam memprediksi target. Dalam kasus kita, nilai MSE yang sangat mendekati nol (2.887765929608967e-24) menunjukkan bahwa model kita hampir sempurna dalam memprediksi jumlah sepeda yang dipinjam.

Koefisien-koeifisien yang dicetak di bawahnya menunjukkan seberapa besar pengaruh dari masing-masing fitur terhadap target 'cnt'. Koefisien 'registered' dan 'casual' memiliki nilai 1, yang menunjukkan bahwa keduanya memiliki pengaruh positif yang sama besar terhadap jumlah sepeda yang dipinjam. Koefisien 'instant' dan 'temp' memiliki nilai yang sangat mendekati nol, yang menunjukkan bahwa kedua fitur tersebut memiliki pengaruh yang sangat kecil atau hampir tidak berpengaruh terhadap jumlah sepeda yang dipinjam.

Dengan demikian, dalam analisis ini, faktor-faktor yang paling berpengaruh terhadap jumlah sepeda yang dipinjam adalah 'registered' dan 'casual', sementara 'instant' dan 'temp' hampir tidak berpengaruh.

### Pertanyaan 2:
Bagaimana kondisi cuaca seperti suhu, hujan, dan kecepatan angin mempengaruhi jumlah peminjaman sepeda? Adakah perbedaan dalam pola peminjaman antara pengguna terdaftar dan pengguna kasual?
"""

import pandas as pd
import matplotlib.pyplot as plt

# Membaca dataset day dan dataset hour
data_day = pd.read_csv('day.csv')
data_hour = pd.read_csv('hour.csv')

# Analisis pengaruh suhu terhadap jumlah peminjaman sepeda
plt.figure(figsize=(12, 6))
plt.scatter(data_day['temp'], data_day['registered'], alpha=0.5, label='Peminjaman Terdaftar')
plt.scatter(data_day['temp'], data_day['casual'], alpha=0.5, label='Peminjaman Kasual')
plt.xlabel('Suhu (°C)')
plt.ylabel('Jumlah Peminjaman')
plt.legend()
plt.title('Pengaruh Suhu terhadap Jumlah Peminjaman')
plt.show()

# Analisis pengaruh kondisi cuaca terhadap jumlah peminjaman sepeda
plt.figure(figsize=(12, 6))
plt.bar(data_day['weathersit'], data_day['registered'], alpha=0.5, label='Peminjaman Terdaftar')
plt.bar(data_day['weathersit'], data_day['casual'], alpha=0.5, label='Peminjaman Kasual')
plt.xlabel('Kondisi Cuaca')
plt.ylabel('Jumlah Peminjaman')
plt.xticks([1, 2, 3, 4], ['Cerah', 'Berawan', 'Hujan Ringan', 'Hujan Salju'])
plt.legend()
plt.title('Pengaruh Kondisi Cuaca terhadap Jumlah Peminjaman')
plt.show()

# Analisis pengaruh kecepatan angin terhadap jumlah peminjaman sepeda
plt.figure(figsize=(12, 6))
plt.scatter(data_hour['windspeed'], data_hour['registered'], alpha=0.5, label='Peminjaman Terdaftar')
plt.scatter(data_hour['windspeed'], data_hour['casual'], alpha=0.5, label='Peminjaman Kasual')
plt.xlabel('Kecepatan Angin')
plt.ylabel('Jumlah Peminjaman')
plt.legend()
plt.title('Pengaruh Kecepatan Angin terhadap Jumlah Peminjaman')
plt.show()

"""## Conclusion

Kesimpulannya, suhu dan kondisi cuaca memiliki pengaruh yang signifikan terhadap jumlah peminjaman sepeda, dengan cuaca yang cerah dan suhu yang lebih tinggi meningkatkan jumlah peminjaman. Perbedaan terlihat dalam pola peminjaman antara pengguna terdaftar dan pengguna kasual terkait dengan kondisi cuaca. Kecepatan angin tampaknya memiliki pengaruh yang relatif kecil terhadap peminjaman sepeda.
"""